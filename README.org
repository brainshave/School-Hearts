* Propozycja: używanie grup w NetBeans
  Żeby trzymać wszystkie projekty na raz otwarte oddzielnie od
  reszty zajęć fajnie jest sobie utworzyć grupę.

  1. Klikejszon File -> Project Group -> New Group...
  2. tam wybieramy "Folder of Projects" i wybieramy folder
     z projektami
  3. :)

  Polecam też wygenerować sobie javadoca z Definitions i czytanie
  tam dokumentacji.

* Technicznie
  - Używamy *NetBeansa 6.7.1*, bo 6.8 nie wprowadza istotnych zmian
    a przecież kochamy plugin do UML-a ;)
  - Ewentualnie można pisać w dowolnym edytorze i kompilować antem.
  - Gita, na Windowsie [[http://code.google.com/p/msysgit/][msysgita]].
  - Do zabawy z kluczami na Windowsie polecam putty (pageant)
  - Olewamy zoho, github ma coś takiego jak [[http://github.com/santamon/School-Hearts/issues][issues]] i spróbujemy działać
    na tym.

* Strategia
  - każdy pracuje w swoim forku, wrzuca do mojego mastera tylko sprawne
    i *przetestowane* komponenty, może najlepiej z plikiem *jar*?
    (może "oficjalne" jary pójdą do katalogu Lib ?)
  - nazwy funkcji i klas po ang. komentarze, commity i dokumentacja po PL
  - master nie służy też do pisania czegoś w dwie osoby i synchronizacji
    na bieżąco.
    Do tego git jest systemem rozproszonym, żeby takie akcje robić poza
    masterem :P
  - problemy z mergowaniem z masterem zostawcie Szymonowi ;)

* Projekty Hearts ___
  Opisy projektów są trochę nieaktualne, przydziały jak najbardziej ;)

  Kolumna "Implementuje" mówi, że implementuje np. hearts.defs.state.*
  jako hearts.state.*

** Server
   Mega serwer w Javie, agreguje implementację protokołu i stanu, ma
   własnego StateGuarda

   | Opiekun: | + | Zależy od:  | Wymagane przez: | Implementuje:       |
   |----------+---+-------------+-----------------+---------------------|
   | Michał   |   | Definitions | brak            | hearts.def.server.* |
   |          |   | Protocol    |                 |                     |
   |          |   | State       |                 |                     |

** Client  
   Piękny klient w Swingu.

   | Opiekun: | + | Zależy od:  | Wymagane przez: |
   |----------+---+-------------+-----------------|
   | Szymon   |   | Definitions | brak            |
   |          |   | Protocol    |                 |
   |          |   | State       |                 |

** Definitions
   Definicje wszystkich interfejsów gry, centralne miejsce na projektowanie
   i dokumentację. Dokumentujemy tutaj teoretyczne działanie klas i metod,
   szczegóły dot. implementacji powinny być udokumentowane tam.

   Interfejsy można dodawać po zaimplementowaniu ale może to być
   trudniejsze w realizacji (rozdzielenie co się nadaje do interfejsu
   a co jest czysto implementacyjne).
   
   | Opiekun: | +       | Zależy od: | Wymagane przez: |
   |----------+---------+------------+-----------------|
   | Szymon   | wszyscy | brak       | wszystko        |


** State
   Zapis stanu gry, wszystkie akcje, sędzia (sprawdza czy można wykonać akcję).
   - Łukasz:
     - implementacja akcji serwera,
     - zaślepki wynikających z akcji serwera akcji klienta;
   - Paweł:
     - implementacja akcji klienta,
     - zaślepki akcji GUI;
   - Szymon:
     - implementacja akcji GUI.

   | Opiekun: | +      | Zależy od:  | Wymagane przez: | Implementuje:         |
   |----------+--------+-------------+-----------------+-----------------------|
   | Paweł    | Łukasz | Definitions | Server          | hearts.defs.state.*   |
   |          | Szymon |             | Client          | hearts.defs.actions.* |
   |          |        |             |                 | hearts.defs.judge.*   |

** Protocol
   Implementacja protokołu zarówno dla klienta jak i serwera.

   | Opiekun: | +      | Zależy od:  | Wymagane przez: | Implementuje:          |
   |----------+--------+-------------+-----------------+------------------------|
   | Michał   | Szymon | Definitions | Server          | hearts.defs.protocol.* |
   |          |        |             | Client          |                        |
     
* Ten plik
  Został stworzony w org-mode w Emacsie, ale składnia jest tak oczywista, 
  że możecie to edytować sami, niech będzie powiedzmy tablicą ogłoszeń.
  Utrzymujcie jakąś stałą szerokość wiersza.
  
  Poszczególne punkty można naturalnie komentować tylko z podpisami,
  a do bardziej wylewnych form służy wiki.
