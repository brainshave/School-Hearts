* Za co grozi śmierć?
  - Za dodanie prywatnych ustawień projektu (katalog _private_ wew.
    katalogu projektu)
  - za złorzeczenie Królowej.

* Technicznie
  - Używamy *NetBeansa 6.7.1*, bo 6.8 nie wprowadza istotnych zmian
    a przecież kochamy plugin do UML-a ;)
  - Ewentualnie można pisać w dowolnym edytorze i kompilować antem.
  - Gita, na Windowsie [[http://code.google.com/p/msysgit/][msysgita]].
  - Do zabawy z kluczami na Windowsie polecam putty (pageant)
  - Olewamy zoho, github ma coś takiego jak [[http://github.com/santamon/School-Hearts/issues][issues]] i spróbujemy działać
    na tym.

* Strategia
  Póki co taki pomysł:
  - każdy pracuje w swoim forku, wrzuca do mojego mastera tylko sprawne
    i _przetestowane_ komponenty, może najlepiej z plikiem *jar*?
    (może "oficjalne" jary pójdą do katalogu Lib ?)
  - master nie służy też do pisania czegoś w dwie osoby i synchronizacji
    na bieżąco.
    Do tego git jest systemem rozproszonym, żeby takie akcje robić poza
    masterem :P
  - problemy z mergowaniem z masterem zostawcie Szymonowi ;)

* Projekty Hearts*
** Server
   Mega serwer w Javie

   | Opiekun:        | Michał       |
   |-----------------+--------------|
   | Dodatkowo:      | Paweł        |
   |-----------------+--------------|
   | Zależy od:      | Definitions, |
   |                 | Judge,       |
   |                 | Protocol,    |
   |                 | Storage,     |
   |                 | State        |
   |-----------------+--------------|
   | Wymagane przez: | brak         |

** Client  
   Piękny klient w Swingu.

   | Opiekun:        | Szymon       |
   |-----------------+--------------|
   | Dodatkowo:      | chętni?      |
   |-----------------+--------------|
   | Zależy od:      | Definitions, |
   |                 | Protocol,    |
   |                 | State        |
   |-----------------+--------------|
   | Wymagane przez: | brak         |

** Definitions
   Definicje wszystkich interfejsów gry, centralne miejsce na projektowanie
   i dokumentację. Dokumentujemy tutaj teoretyczne działanie klas i metod,
   szczegóły dot. implementacji powinny być udokumentowane tam.

   Interfejsy można dodawać po zaimplementowaniu ale może to być
   trudniejsze w realizacji (rozdzielenie co się nadaje do interfejsu
   a co jest czysto implementacyjne).
   
   | Opiekun:        | Szymon                                    |
   |-----------------+-------------------------------------------|
   | Dodatkowo:      | każdy może dodawać,                       |
   |                 | ale najlepiej przedyskutować to wcześniej |
   |-----------------+-------------------------------------------|
   | Zależy od:      | brak                                      |
   |-----------------+-------------------------------------------|
   | Wymagane przez: | Wszystko                                  |

** Protocol
   Implementacja protokołu zarówno dla klienta jak i serwera.
   
   | Opiekun:        | Michał       |
   |-----------------+--------------|
   | Zależy od:      | Definitions, |
   |                 | State        |
   |-----------------+--------------|
   | Wymagane przez: | Server,      |
   |                 | Client.      |

** Storage
   - serializowanie i zapis stanu gry.
   - przywracanie

   | Opiekun:        | Paweł        |
   |-----------------+--------------|
   | Zależy od:      | Definitions, |
   |                 | State        |
   |-----------------+--------------|
   | Wymagane przez: | Server       |

** Judge
   Implementacja zasad gry, na wejściu otrzymujemy State, na wyjściu
   nowy State.

   | Opiekun:        | Łukasz       |
   |-----------------+--------------|
   | Zależy od:      | Definitions, |
   |                 | State        |
   |-----------------+--------------|
   | Wymagane przez: | Server       | 

** State
   Format zapisu stanu gry.

   | Opiekun:        | Szymon      |
   |-----------------+-------------|
   | Zależy od:      | Definitions |
   |-----------------+-------------|
   | Wymagane przez: | Server,     |
   |                 | Client,     |
   |                 | Judge,      |
   |                 | Storage     |
   

* Ten plik
  Został stworzony w org-mode w Emacsie, ale składnia jest tak oczywista, 
  że możecie to edytować sami, niech będzie powiedzmy tablicą ogłoszeń.
  Utrzymujcie jakąś stałą szerokość wiersza.
  
  Poszczególne punkty można naturalnie komentować tylko z podpisami,
  a do bardziej wylewnych form służy wiki.
